#!/bin/bash
#***********************************************************************
#*                   GNU Lesser General Public License
#*
#* This file is part of the SHiELD Build System.
#*
#* The SHiELD Build System free software: you can redistribute it
#* and/or modify it under the terms of the
#* GNU Lesser General Public License as published by the
#* Free Software Foundation, either version 3 of the License, or
#* (at your option) any later version.
#*
#* The SHiELD Build System distributed in the hope that it will be
#* useful, but WITHOUT ANYWARRANTY; without even the implied warranty
#* of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
#* See the GNU General Public License for more details.
#*
#* You should have received a copy of the GNU Lesser General Public
#* License along with theSHiELD Build System
#* If not, see <http://www.gnu.org/licenses/>.
#***********************************************************************
#
#  DISCLAIMER: This script is provided as-is and as such is unsupported.
#

#
## set default values
CONFIG="shield"
HYDRO="nh"
COMP=""
BIT="32BIT=Y"
AVX="Y"
COMPILER="intel"

bit="32bit"
comp="prod"
pic="nopic"

#
## parse arguments
for arg in "$@"
do
    case $arg in
        shield|solo)
          CONFIG="${arg#*=}"
          shift # Remove CONFIG from processing
          ;;
        nh|hydro|sw)
          HYDRO="${arg#*=}"
          shift # remove "hydro" from processing
          ;;
        prod|repro|debug)
          comp="${arg#*=}"
          if [ ${arg#} = 'repro' ] ; then
            COMP="REPRO=Y"
          elif [ ${arg#} = 'debug' ] ; then
            COMP="DEBUG=Y"
          fi
          shift # Remove COMP from processing
          ;;
        32bit|64bit)
          bit="${arg#*=}"
          if [ "${arg#}" = '64bit' ] ; then
            BIT=""
          fi
          shift # Remove BIT from processing
          ;;
        Y|N)
          AVX="${arg#*=}"
          shift # Remove AVX from processing
          ;;
        intel|gnu|nvhpc)
          COMPILER="${arg#*=}"
          shift # Remove COMPILER from processing
          ;;
        nopic|pic)
          if [ "${arg#*=}" = 'pic' ] ; then
            PIC=Y
          else
            PIC=N
          fi
          shift # Remove PIC from processing
          ;;
    esac
done

#-- load the development environment
. ${BUILD_ROOT}/site/environment.${COMPILER}.sh
module list

$FC --version

if [ ${CONFIG} = 'shield' ] ; then
  NCEPLIBS="./libfv3.a"
  NCEPLIBS+=" ${NCEP_DIR}/libFMS/${COMPILER}/${bit}/libFMS.a"
  NCEPLIBS+=" ./libgfs.a"
  NCEPLIBS+=" -L${NCEP_DIR}/nceplibs/${COMPILER}/ -lbacio  -lsp_d  -lw3emc_d  -lw3nco_d"
else
  NCEPLIBS=${NCEP_DIR}/libFMS/${COMPILER}/${bit}/libFMS.a
fi

if [ ${CONFIG} = 'shield' ] ; then
  (cd exec/${CONFIG}_${HYDRO}.${comp}.${bit}.${COMPILER} ; make -j 8 OPENMP=Y ${COMP} AVX=${AVX} PIC=${PIC} -f Makefile_gfs)
fi

(cd exec/${CONFIG}_${HYDRO}.${comp}.${bit}.${COMPILER} ; make -j 8 OPENMP=Y ${COMP} AVX=${AVX} ${BIT} PIC=${PIC} NCEPLIBS="${NCEPLIBS}" -f Makefile_fv3)

if [ ${CONFIG} = 'shield' ] ; then
    (cd exec/${CONFIG}_${HYDRO}.${comp}.${bit}.${COMPILER} ; make -j 8 OPENMP=Y NETCDF=3 ${COMP} AVX=${AVX} ${BIT} PIC=${PIC} NCEPLIBS="${NCEPLIBS}" -f Makefile_driver)
fi
exit 0

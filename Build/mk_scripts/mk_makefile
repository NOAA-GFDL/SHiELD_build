#!/bin/bash
#***********************************************************************
#*                   GNU Lesser General Public License
#*
#* This file is part of the SHiELD Build System.
#*
#* The SHiELD Build System free software: you can redistribute it
#* and/or modify it under the terms of the
#* GNU Lesser General Public License as published by the
#* Free Software Foundation, either version 3 of the License, or
#* (at your option) any later version.
#*
#* The SHiELD Build System distributed in the hope that it will be
#* useful, but WITHOUT ANYWARRANTY; without even the implied warranty
#* of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
#* See the GNU General Public License for more details.
#*
#* You should have received a copy of the GNU Lesser General Public
#* License along with theSHiELD Build System
#* If not, see <http://www.gnu.org/licenses/>.
#***********************************************************************
#
#  DISCLAIMER: This script is provided as-is and as such is unsupported.
#

#
## set default values
CONFIG="shield"
HYDRO="nh"
COMP="prod"
BIT="32bit"
COMPILER="intel"

#
### parse arguments
for arg in "$@"
do
    case $arg in
        shield|solo)
        CONFIG="${arg#*=}"
        shift # Remove CONFIG from processing
        ;;
        nh|hydro|sw)
        HYDRO="${arg#*=}"
        shift # Remove HYDRO from processing
        ;;
        prod|repro|debug)
        COMP="${arg#*=}"
        shift # remove "comp" from processing
        ;;
        32bit|64bit)
        BIT="${arg#*=}"
        shift # Remove *bit from processing
        ;;
        intel|gnu|nvhpc)
        COMPILER="${arg#*=}"
        shift # Remove compiler from processing
        ;;
    esac
done

set -x

#
# GFS CPPDEFS
GFS_cppDefs="-DNEW_TAUCTMAX -DNEMS_GSM -DINTERNAL_FILE_NML"

#
# FV3 CPPDEFS
FV3_cppDefs="-Duse_libMPI -Duse_netCDF -DHAVE_SCHED_GETAFFINITY -DSPMD -Duse_LARGEFILE -DINTERNAL_FILE_NML"
if [ ${CONFIG} = 'shield' ] ; then
  FV3_cppDefs+=" -DGFS_PHYS -DUSE_GFSL63"
elif [ ${CONFIG} = 'solo' ] ; then
  FV3_cppDefs+=" -DDCMIP -DDYCORE_SOLO -DHIWPP"
fi

#
# add non-hydrostatic or shallow-water CPPDEFS
if [ ${HYDRO} = 'nh' ] ; then
  FV3_cppDefs+=" -DMOIST_CAPPA -DUSE_COND"
elif [ ${HYDRO} = 'sw' ] ; then
  FV3_cppDefs+=" -DSW_DYNAMICS -DDYNAMICS_ZS"
fi

pushd exec/${CONFIG}_${HYDRO}.${COMP}.${BIT}.${COMPILER}/

############################
#---CREATE MAKEFILES
############################
if [ ${CONFIG} = 'shield' ] ; then
  mkmf -m Makefile_gfs -a ${SHiELD_SRC} -t "${BUILD_ROOT}/${TEMPLATE}" -o "-cpp" -c "${GFS_cppDefs}" \
           -p libgfs.a ${BUILD_ROOT}/Build/exec/${CONFIG}_${HYDRO}.${COMP}.${BIT}.${COMPILER}/pathnames_gfs
fi

mkmf -m Makefile_fv3 -a ${SHiELD_SRC} -t "${BUILD_ROOT}/${TEMPLATE}" -c "${FV3_cppDefs}" \
         -p test.x -o "-I${SHiELD_SRC}/FMS/include -I${NCEP_DIR}/libFMS/${COMPILER}/${BIT}" \
          ${BUILD_ROOT}/Build/exec/${CONFIG}_${HYDRO}.${COMP}.${BIT}.${COMPILER}/pathnames_fv3

############################
#---ADD LIBS TO FINAL LINK
############################
sed 's/LDFLAGS/NCEPLIBS) $(LDFLAGS/g' < Makefile_fv3 > OUT
mv OUT Makefile_fv3

############################
#---COMPILE -O0 (for speed)
#---GFS_diagnostics.F90
############################
if [ ${CONFIG} = 'shield' ] ; then
  sed -i 's"$(FC) $(CPPDEFS) $(FPPFLAGS) $(FFLAGS) $(OTHERFLAGS) $(OTHER_FFLAGS) -c\t$(SRCROOT)SHiELD_physics/GFS_layer/GFS_diagnostics.F90" $(FC) $(CPPDEFS) $(FPPFLAGS) $(FFLAGS) $(OTHERFLAGS) $(OTHER_FFLAGS) -O0 -c\t$(SRCROOT)SHiELD_physics/GFS_layer/GFS_diagnostics.F90" ' Makefile_gfs
fi

############################
#---ADD FAST TRANSCENDENTALS
#---model/nh_utils.F90
#---model/fv_mapz.F90
############################
sed -i 's"$(FC) $(CPPDEFS) $(FPPFLAGS) $(FFLAGS) $(OTHERFLAGS) $(OTHER_FFLAGS) -c\t$(SRCROOT)atmos_cubed_sphere/model/nh_utils.F90"$(FC) $(CPPDEFS) $(FPPFLAGS) $(FFLAGS) $(OTHERFLAGS) $(OTHER_FFLAGS) $(FAST) -c\t$(SRCROOT)atmos_cubed_sphere/model/nh_utils.F90"' Makefile_fv3

sed -i 's"$(FC) $(CPPDEFS) $(FPPFLAGS) $(FFLAGS) $(OTHERFLAGS) $(OTHER_FFLAGS) -c\t$(SRCROOT)atmos_cubed_sphere/model/fv_mapz.F90"$(FC) $(CPPDEFS) $(FPPFLAGS) $(FFLAGS) $(OTHERFLAGS) $(OTHER_FFLAGS) $(FAST) -c\t$(SRCROOT)atmos_cubed_sphere/model/fv_mapz.F90"' Makefile_fv3

############################

popd

exit 0
